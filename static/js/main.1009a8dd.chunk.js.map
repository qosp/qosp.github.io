{"version":3,"sources":["app/assets/logo_round.png","app/utils/Constants.tsx","app/components/navbar/Navbar.tsx","app/components/footer/Footer.tsx","app/assets/devices_1024x1024.png","app/assets/screenshot_markdown.png","app/assets/screenshot_reminder.png","app/assets/screenshot_tasks.png","app/components/common/BigButton.tsx","app/screens/home/HomeScreen.tsx","app/assets/fdroid.png","app/assets/play_store.png","app/screens/download/DownloadScreen.tsx","app/screens/privacy/PrivacyPolicyScreen.tsx","app/screens/support/SupportScreen.tsx","app/App.tsx","index.tsx"],"names":["GIT_REPO_URL","NavMenuContext","createContext","visibility","MenuToggleProvider","children","value","Provider","Navbar","useState","menuShowing","setMenuShowing","className","text","path","hideOnSmallScreen","isExternal","onClick","NavHome","useContext","to","src","RoundLogo","alt","NavLink","props","target","rel","href","style","marginLeft","NavDivider","Footer","BigButton","external","HomeScreen","HeaderSection","DevicesPhoto","FeaturesSection","title","description","image","MarkdownFeature","TaskListFeature","RemindersFeature","Feature","DownloadScreen","name","FDroidLogo","link","isRecommended","PlayStoreLogo","Store","PrivacyPolicyScreen","SupportScreen","fill","App","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAAe,G,MAAA,IAA0B,wCCA5BA,EAAe,4C,cCYtBC,EAAiBC,yBAAc,SAACC,OAEzBC,EAAqB,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,MAC3C,OAAO,cAACL,EAAeM,SAAhB,CAAyBD,MAAOA,EAAhC,SAAwCD,KAItCG,EAAS,WAClB,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAGA,OACI,mCACI,eAAC,EAAD,CAAoBL,MAAOK,EAA3B,UACI,sBAAKC,UAAWF,EAAc,SAAW,mBAAzC,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAASG,KAAK,WAAWC,KAAM,YAAaC,mBAAmB,IAC/D,cAAC,EAAD,IACA,cAAC,EAAD,CAASF,KAAK,sBAAsBC,KAAM,WAAYC,mBAAmB,IACzE,cAAC,EAAD,CAASF,KAAK,iBAAiBC,KAAMd,EAAcgB,YAAY,EAAMD,mBAAmB,IAExF,cAAC,IAAD,CAAQH,UAAW,mBAAoBK,QAZ9B,WAAON,GAAgBD,SAgBpC,sBAAKE,UAAWF,EAAc,oBAAsB,aAApD,UACI,cAAC,EAAD,CAASG,KAAK,WAAWC,KAAM,cAC/B,cAAC,EAAD,IACA,cAAC,EAAD,CAASD,KAAK,sBAAsBC,KAAM,aAC1C,cAAC,EAAD,CAASD,KAAK,iBAAiBC,KAAMd,EAAcgB,YAAY,aAO7EE,EAAU,WACZ,IAAMP,EAAiBQ,qBAAWlB,GAGlC,OACI,qBAAKgB,QAHU,WAAQN,GAAe,IAGtC,SACI,eAAC,IAAD,CAAMC,UAAU,MAAMQ,GAAG,IAAzB,UACI,qBAAKC,IAAKC,EAAWC,IAAK,YAAaX,UAAW,SAClD,sBAAMA,UAAU,OAAhB,6BAMVY,EAAU,SAACC,GACb,IAAMd,EAAiBQ,qBAAWlB,GAGlC,OACI,qBAAKW,UAAWa,EAAMV,kBAAoB,4BAA8B,MAAOE,QAHhE,WAAQN,GAAe,IAGtC,SACKc,EAAMT,WACH,oBAAGJ,UAAU,OAAOc,OAAO,SAASC,IAAI,aAAaC,KAAMH,EAAMX,KAAjE,UACKW,EAAMZ,KACP,cAAC,IAAD,CAAgBgB,MAAO,CAACC,WAAY,YAGxC,cAAC,IAAD,CAAMlB,UAAU,OAAOQ,GAAIK,EAAMX,KAAjC,SACKW,EAAMZ,UAOrBkB,EAAa,WACf,OAAO,sBAAMnB,UAAU,iBC9EdoB,G,MAAS,WACpB,OACI,qBAAKpB,UAAU,SAAf,SACI,qDACqB,mBAAGc,OAAO,SAASC,IAAI,aAAaC,KFRrC,kCEQC,iCACjB,uBAAK,uBACL,cAAC,IAAD,CAAMR,GAAI,WAAYR,UAAW,OAAjC,4BACA,uBAAK,8BCZJ,MAA0B,8CCA1B,MAA0B,gDCA1B,MAA0B,gDCA1B,MAA0B,6CCG5BqB,G,YAAY,SAACR,GACtB,OACIA,EAAMS,SACA,mBAAGN,KAAMH,EAAMX,KAAMY,OAAQ,SAAUC,IAAK,aAA5C,SACE,wBAAQf,UAAW,kBAAnB,SACKa,EAAMZ,SAGb,cAAC,IAAD,CAAMO,GAAIK,EAAMX,KAAhB,SACE,wBAAQF,UAAW,kBAAnB,SACKa,EAAMZ,WCHdsB,EAAa,WACxB,OACI,sBAAKvB,UAAU,cAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QAMFwB,EAAgB,WAClB,OACI,qBAAKxB,UAAW,kBAAhB,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKS,IAAKgB,EAAczB,UAAW,gBAAiBW,IAAK,+BACzD,sBAAKX,UAAW,aAAhB,UACI,8CAAgB,uBAAhB,kBACA,oRAIA,kEACA,4LAGA,cAAC,EAAD,CAAWE,KAAM,YAAaD,KAAM,2BAOlDyB,EAAkB,WAKpB,OACI,sBAAK1B,UAAU,mBAAf,UACI,cAAC,EAAD,CAAS2B,MAAO,WAAYC,YANT,sHAM4CC,MAAOC,IACtE,cAAC,EAAD,CAASH,MAAO,aAAcC,YALX,uHAK8CC,MAAOE,IACxE,cAAC,EAAD,CAASJ,MAAO,YAAaC,YAPT,iGAO6CC,MAAOG,QAK9EC,EAAU,SAACpB,GACb,OACI,sBAAKb,UAAU,UAAf,UACI,6BAAKa,EAAMc,QACX,4BAAId,EAAMe,cACV,qBAAKnB,IAAKI,EAAMgB,MAAOlB,IAAKE,EAAMc,MAAO3B,UAAW,mB,OC7DjD,G,MAAA,IAA0B,oCCA1B,MAA0B,uCCO5BkC,EAAiB,WAC5B,OACI,sBAAKlC,UAAU,iBAAf,UACI,oDACA,0FAEA,sBAAKA,UAAW,SAAhB,UACI,cAAC,EAAD,CAAOmC,KAAM,UAAWN,MAAOO,EAAYC,KXX9B,kDWWiDC,eAAe,IAC7E,cAAC,EAAD,CAAOH,KAAM,aAAcN,MAAOU,EAAeF,KXbhC,oEWgBrB,gFACmD,mBAAGrB,KXflC,4DWewDF,OAAO,SAASC,IAAI,aAA7C,kBADnD,OAGA,uBACA,uGAKGyB,EAAQ,SAAC3B,GAClB,OACI,sBAAKb,UAAWa,EAAMyB,cAAgB,qBAAuB,QAA7D,UACI,6BAAKzB,EAAMsB,OACX,mBAAGnB,KAAMH,EAAMwB,KAAMvB,OAAO,SAASC,IAAI,aAAzC,SACI,qBAAKN,IAAKI,EAAMgB,MAAOlB,IAAG,2BAAsBE,EAAMsB,MAAQnC,UAAW,iBAE3Ea,EAAMyB,cACF,mBAAGtC,UAAW,wBAAd,0BACA,SClCLyC,G,MAAsB,WAC/B,OACI,sBAAKzC,UAAU,wBAAf,UACI,gDACA,qHACwF,uBADxF,oJAEqJ,uBAFrJ,kL,gBCDC0C,EAAgB,WAC3B,OACE,sBAAK1C,UAAU,iBAAf,UACI,cAAC,IAAD,CAAW2C,KAAM,UAAW3C,UAAW,eACvC,sBAAKA,UAAW,aAAhB,UACI,qDACA,wHAEc,uBAFd,gCAKA,cAAC,EAAD,CAAWE,KbXW,sCaWeD,KAAM,wBAAyBqB,UAAU,IAE9E,uBACA,uBACA,kEACA,6FAIA,cAAC,EAAD,CAAWpB,KbnBW,iCamBeD,KAAM,oBAAqBqB,UAAU,WCVvE,SAASsB,IACpB,OACI,8BACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAAC3C,KAAK,IAAI4C,UAAWvB,IACjC,cAAC,IAAD,CAAOrB,KAAK,YAAY4C,UAAWZ,IACnC,cAAC,IAAD,CAAOhC,KAAK,WAAW4C,UAAWJ,IAClC,cAAC,IAAD,CAAOxC,KAAM,WAAY4C,UAAWL,OAExC,cAAC,EAAD,SCtBhBM,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.1009a8dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_round.345bdcc8.png\";","export const GIT_REPO_URL = \"https://github.com/msoultanidis/quillnote\"\nexport const DEV_GITHUB_URL = \"https://github.com/msoultanidis\"\nexport const PLAY_STORE_LINK = \"https://play.google.com/store/apps/details?id=org.qosp.notes\"\nexport const FDROID_LINK = \"https://f-droid.org/en/packages/org.qosp.notes/\"\nexport const LATEST_APK_URL = \"https://github.com/msoultanidis/quillnote/releases/latest\"\nexport const DONATE_LIBERA_LINK = \"https://en.liberapay.com/Quillnote/\"\nexport const DONATE_FDROID_LINK = \"https://f-droid.org/en/donate/\"","import React, {useState, createContext, useContext, MouseEventHandler} from 'react';\nimport {BiLinkExternal, MdMenu} from \"react-icons/all\";\nimport './Navbar.scss';\nimport RoundLogo from '../../assets/logo_round.png';\nimport {GIT_REPO_URL} from \"../../utils/Constants\";\nimport {Link} from 'react-router-dom';\n\ninterface NavMenuContextProps {\n    children: any\n    value: any\n}\n\nconst NavMenuContext = createContext((visibility: boolean) => {});\n\nexport const MenuToggleProvider = ({ children, value }: NavMenuContextProps) => {\n    return <NavMenuContext.Provider value={value}>{children}</NavMenuContext.Provider>;\n}\n\n// TODO: Make navbar mobile friendly\nexport const Navbar = () => {\n    const [menuShowing, setMenuShowing] = useState(false);\n    const toggleDrawerMenu = () => {setMenuShowing(!menuShowing)}\n\n    return (\n        <>\n            <MenuToggleProvider value={setMenuShowing}>\n                <div className={menuShowing ? \"navbar\" : \"navbar--elevated\"}>\n                    <NavHome/>\n                    <NavLink text=\"Download\" path={\"/download\"} hideOnSmallScreen={true}/>\n                    <NavDivider/>\n                    <NavLink text=\"Support the project\" path={\"/support\"} hideOnSmallScreen={true}/>\n                    <NavLink text=\"View on GitHub\" path={GIT_REPO_URL} isExternal={true} hideOnSmallScreen={true}/>\n\n                    <MdMenu className={\"nav--menu-button\"} onClick={toggleDrawerMenu}/>\n                </div>\n\n\n                <div className={menuShowing ? \"nav-drawer active\" : \"nav-drawer\"}>\n                    <NavLink text=\"Download\" path={\"/download\"}/>\n                    <NavDivider/>\n                    <NavLink text=\"Support the project\" path={\"/support\"}/>\n                    <NavLink text=\"View on GitHub\" path={GIT_REPO_URL} isExternal={true}/>\n                </div>\n            </MenuToggleProvider>\n        </>\n    );\n}\n\nconst NavHome = () => {\n    const setMenuShowing = useContext(NavMenuContext)\n    const hideDrawer = () => { setMenuShowing(false) }\n\n    return (\n        <div onClick={hideDrawer}>\n            <Link className=\"nav\" to=\"/\">\n                <img src={RoundLogo} alt={\"Quillnote\"} className={\"logo\"}/>\n                <span className=\"home\">Quillnote</span>\n            </Link>\n        </div>\n    );\n}\n\nconst NavLink = (props: NavLinkProps) => {\n    const setMenuShowing = useContext(NavMenuContext)\n    const hideDrawer = () => { setMenuShowing(false) }\n\n    return (\n        <div className={props.hideOnSmallScreen ? \"nav--hide-on-small-screen\" : \"nav\"} onClick={hideDrawer}>\n            {props.isExternal ?\n                <a className=\"link\" target=\"_blank\" rel=\"noreferrer\" href={props.path}>\n                    {props.text}\n                    <BiLinkExternal style={{marginLeft: '3px'}}/>\n                </a>\n                :\n                <Link className=\"link\" to={props.path}>\n                    {props.text}\n                </Link>\n            }\n        </div>\n    );\n}\n\nconst NavDivider = () => {\n    return <span className=\"nav-divider\"/>\n}\n\ninterface NavLinkProps {\n    text: string\n    path: string\n    isExternal?: boolean\n    hideOnSmallScreen?: boolean\n}\n","import React from 'react';\nimport './Footer.scss';\nimport {DEV_GITHUB_URL} from \"../../utils/Constants\";\nimport {Link} from 'react-router-dom';\n\nexport const Footer = () => {\n  return (\n      <div className=\"footer\">\n          <p>\n              Copyright Â© 2021 <a target=\"_blank\" rel=\"noreferrer\" href={DEV_GITHUB_URL}>Michael Soultanidis</a>\n              <br/><br/>\n              <Link to={\"/privacy\"} className={\"link\"}>Privacy Policy</Link>\n              <br/><br/>\n          </p>\n      </div>\n  );\n}\n\n","export default __webpack_public_path__ + \"static/media/devices_1024x1024.93168a04.png\";","export default __webpack_public_path__ + \"static/media/screenshot_markdown.dada18c8.png\";","export default __webpack_public_path__ + \"static/media/screenshot_reminder.29c6b2f6.png\";","export default __webpack_public_path__ + \"static/media/screenshot_tasks.ecbc16cd.png\";","import './BigButton.scss'\nimport {Link} from 'react-router-dom'\n\nexport const BigButton = (props: BigButtonProps) => {\n    return (\n        props.external\n            ? <a href={props.path} target={\"_blank\"} rel={\"noreferrer\"}>\n                <button className={\"download-button\"}>\n                    {props.text}\n                </button>\n            </a>\n            : <Link to={props.path}>\n                <button className={\"download-button\"}>\n                    {props.text}\n                </button>\n            </Link>\n    );\n}\n\nexport interface BigButtonProps {\n    text: string\n    path: string\n    external?: boolean\n}","import React from 'react';\nimport DevicesPhoto from '../../assets/devices_1024x1024.png';\n\nimport MarkdownFeature from '../../assets/screenshot_markdown.png';\nimport RemindersFeature from '../../assets/screenshot_reminder.png';\nimport TaskListFeature from '../../assets/screenshot_tasks.png';\n\nimport './HomeScreen.scss';\nimport {BigButton} from \"../../components/common/BigButton\";\n\nexport const HomeScreen = () => {\n  return (\n      <div className=\"home-screen\">\n        <HeaderSection/>\n        <FeaturesSection/>\n      </div>\n  );\n}\n\n\nconst HeaderSection = () => {\n    return (\n        <div className={\"primary-section\"}>\n            <div className=\"header\">\n                <img src={DevicesPhoto} className={\"promo-devices\"} alt={\"Devices running Quillnote.\"}/>\n                <div className={\"promo-text\"}>\n                    <h1>Take notes, <br/> everywhere.</h1>\n                    <p>\n                        With Quillnote, you can take beautiful markdown notes whenever you feel inspired. Place them in notebooks and tag them accordingly.\n                        Stay organized by making task lists, set reminders and keep everything in one place by attaching related files.\n                    </p>\n                    <h2>100% Free & Open Source Software</h2>\n                    <p>\n                        Quillnote is fully free and open-source. It will never show you ads, ask you for unnecessary permissions or upload your notes anywhere without you knowing.\n                    </p>\n                    <BigButton path={\"/download\"} text={\"Get Quillnote\"}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst FeaturesSection = () => {\n    let markdown_description = \"Markdown lets you take notes with style. You can write in bold or italics, add headings, code blocks and much more.\"\n    let reminders_description = \"Is your friend's birthday coming up? You can set reminders for events you do not want to miss.\"\n    let tasklist_description = \"Organize your life with task lists. Add new tasks, re-order them and when you're done, tick them or swipe them away.\"\n\n    return (\n        <div className=\"features-section\">\n            <Feature title={\"Markdown\"} description={markdown_description} image={MarkdownFeature}/>\n            <Feature title={\"Task lists\"} description={tasklist_description} image={TaskListFeature}/>\n            <Feature title={\"Reminders\"} description={reminders_description} image={RemindersFeature}/>\n        </div>\n    );\n}\n\nconst Feature = (props: FeatureProps) => {\n    return (\n        <div className=\"feature\">\n            <h2>{props.title}</h2>\n            <p>{props.description}</p>\n            <img src={props.image} alt={props.title} className={\"screenshot\"}/>\n        </div>\n    );\n}\n\ninterface FeatureProps {\n    title: string\n    description: string\n    image: string\n}","export default __webpack_public_path__ + \"static/media/fdroid.75d7a10c.png\";","export default __webpack_public_path__ + \"static/media/play_store.02573e42.png\";","import React from 'react';\nimport './DownloadScreen.scss';\n\nimport FDroidLogo from '../../assets/fdroid.png'\nimport PlayStoreLogo from '../../assets/play_store.png'\nimport {FDROID_LINK, LATEST_APK_URL, PLAY_STORE_LINK} from \"../../utils/Constants\";\n\nexport const DownloadScreen = () => {\n  return (\n      <div className=\"downloadScreen\">\n          <h1>Download Quillnote</h1>\n          <p>You can download Quillnote from the following app stores:</p>\n\n          <div className={\"stores\"}>\n              <Store name={\"F-Droid\"} image={FDroidLogo} link={FDROID_LINK} isRecommended={true}/>\n              <Store name={\"Play Store\"} image={PlayStoreLogo} link={PLAY_STORE_LINK}/>\n          </div>\n\n          <p>\n              or you can download directly the APK file from <a href={LATEST_APK_URL} target=\"_blank\" rel=\"noreferrer\">here</a>.\n          </p>\n          <br/>\n          <p>Google Play and the Google Play logo are trademarks of Google LLC.</p>\n      </div>\n  );\n}\n\nexport const Store = (props: StoreProps) => {\n    return (\n        <div className={props.isRecommended ? \"store--recommended\" : \"store\"}>\n            <h3>{props.name}</h3>\n            <a href={props.link} target=\"_blank\" rel=\"noreferrer\">\n                <img src={props.image} alt={`Get Quillnote on ${props.name}`} className={\"store-logo\"}/>\n            </a>\n            { props.isRecommended\n                ? <p className={\"recommended-indicator\"}>Recommended!</p>\n                : null\n            }\n        </div>\n    );\n}\n\ninterface StoreProps {\n    name: string\n    image: string\n    link: string\n    isRecommended?: boolean\n}","import React from 'react';\nimport './PrivacyPolicyScreen.scss';\nexport const PrivacyPolicyScreen = () => {\n    return (\n        <div className=\"privacy-policy-screen\">\n            <h1>Privacy Policy</h1>\n            <p>\n                Quillnote does not send any personal data to any service without your authorization.<br/>\n                Any data generated with Quillnote, such as notes, images or recordings, are saved locally and you are free to completely delete them at any time.<br/>\n                If you enable cloud synchronization with a third-party service such as Nextcloud, your data will be uploaded to your remote account where a third-party policy applies.\n            </p>\n        </div>\n    );\n}\n\n","import React from 'react';\nimport './SupportScreen.scss';\nimport {BigButton} from \"../../components/common/BigButton\";\nimport {IoMdHeart} from \"react-icons/all\";\nimport {DONATE_FDROID_LINK, DONATE_LIBERA_LINK} from \"../../utils/Constants\";\nexport const SupportScreen = () => {\n  return (\n    <div className=\"support-screen\">\n        <IoMdHeart fill={\"#c11137\"} className={\"heart-icon\"}/>\n        <div className={\"promo-text\"}>\n            <h1>Support the project</h1>\n            <p>\n                Creating and maintaining open-source projects is time-consuming and provides\n                no profit.<br/>\n                Buy the developers a beer!\n            </p>\n            <BigButton path={DONATE_LIBERA_LINK} text={\"Donate with Liberapay\"} external={true}/>\n\n            <br/>\n            <br/>\n            <h3>F-Droid needs your support, too.</h3>\n            <p>\n                Help the Android FOSS community grow by donating to F-Droid.\n            </p>\n\n            <BigButton path={DONATE_FDROID_LINK} text={\"Donate to F-Droid\"} external={true}/>\n        </div>\n    </div>\n  );\n}\n\n","import React from \"react\";\nimport './App.scss'\nimport {Navbar} from \"./components/navbar/Navbar\";\nimport {Footer} from \"./components/footer/Footer\";\nimport {HomeScreen} from \"./screens/home/HomeScreen\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom';\nimport {DownloadScreen} from \"./screens/download/DownloadScreen\";\nimport {PrivacyPolicyScreen} from \"./screens/privacy/PrivacyPolicyScreen\";\nimport {SupportScreen} from \"./screens/support/SupportScreen\";\nimport {DONATE_FDROID_LINK} from \"./utils/Constants\";\n\nexport default function App() {\n    return (\n        <div>\n            <Router>\n                <Navbar/>\n                <Switch>\n                    <Route exact path=\"/\" component={HomeScreen}/>\n                    <Route path=\"/download\" component={DownloadScreen}/>\n                    <Route path=\"/support\" component={SupportScreen}/>\n                    <Route path={\"/privacy\"} component={PrivacyPolicyScreen}/>\n                </Switch>\n                <Footer/>\n            </Router>\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./app/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}